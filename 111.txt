git config --global user.name ""
git config --global user.email ""
git init

git add .   /  单个文件

git commit -m '。。。。。'

git status   查看工作区的状态

git  diff  查看工作区文件修改记录

要明白这3个概念，工作区（working tree），暂存区（index /stage），本地仓库（repository）

git跟不同的参数，比较不同的区间的版本。

git diff：是查看working tree与index的差别的。
git diff --cached：是查看index与repository的差别的。
git diff HEAD：是查看working tree和repository的差别的。其中：HEAD代表的是最近的一次commit的信息。
综上所述：git diff 后面跟文件名称是是查看工作区（working tree）与暂存区（index）的差别的。

git log命令显示从最近到最远的提交日志  如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数：

git log --pretty=oneline

git reset --hard head^   回退版本  ^ 表示上一个版本  或者 head~1


git  reset  --head  版本号 恢复最新版本

git reflog用来记录你的每一次命令

1231212

1111

22222


git checkout -- file    还原  git add .  后的状态

git reset HEAD file    还原 git  commit  后的状态

删除版本库中文件 2种方式

1、 rm  file  删除工作区文件  在 git add .  git commit -m ''

2、git rm file  删除版本库中文件


测试1111111111111111

创建密钥

ssh-keygen -t rsa -C "youremail@example.com"

添加远程仓库

git remote add origin git@github.com:michaelliao/learngit.git

-u 参数 将本地master 与远程 master 关联，以后推送简化命令

git push -u origin master

克隆远程仓库

git clone git@github.com:michaelliao/gitskills.git


切换分支并 切换


git checkout -b dev


合并分支

git merge dev


删除分支

git checkout -d dev

切换分支并
git switch -c dev
